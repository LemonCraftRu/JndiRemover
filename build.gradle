buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

group 'ru.icosider'
version = "$mc_version-$mod_version"

minecraft.version = mc_version + '-' + forge_version + '-' + mc_version

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8
compileJava*.options*.encoding = 'UTF-8'

def outSrgFile = tasks.compileJava.temporaryDir.toString() + "/outSrg.srg"
def outRefMapFile = tasks.compileJava.temporaryDir.toString() + "/mixins.jndi_remover.refmap.json"

configurations {
    shade
    compile.extendsFrom(shade)
}

repositories {
    mavenCentral()
    maven {
        name = "Spongepowered"
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    shade('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'commons-codec'
        exclude module: 'asm-commons'
    }
}

jar {
    destinationDir = file("$rootDir/compiled")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from outRefMapFile
    exclude "net/minecraft/**"

    manifest.attributes(
            'FMLCorePluginContainsFMLMod': 'true',
            'MixinConfigs': 'mixins.jndi_remover.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0
    )
    configurations.shade.each { dep -> from(project.zipTree(dep)) }
}

reobf {
    addExtraSrgFile outSrgFile
}

afterEvaluate {
    tasks.compileJava.options.compilerArgs += [
            "-AreobfSrgFile=${tasks.reobf.srg}",
            "-AoutSrgFile=${outSrgFile}",
            "-AoutRefMapFile=${outRefMapFile}"
    ]
}